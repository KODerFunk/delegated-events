/* @flow strict */

type Event = {
  bubbles: boolean;
  cancelable: boolean;
  currentTarget: Element;
  deepPath?: () => EventTarget[];
  defaultPrevented: boolean;
  eventPhase: number;
  isTrusted: boolean;
  scoped: boolean;
  srcElement: Element;
  target: Element;
  timeStamp: number;
  type: string;
  preventDefault(): void;
  stopImmediatePropagation(): void;
  stopPropagation(): void;
}

type EventListener = (event: Event) => mixed

type EventListenerOptions = {
  capture?: boolean
};

declare module.exports: {
  on(
    element: Element | Document,
    type: string,
    selector: string,
    listener: EventListener,
    options?: boolean | EventListenerOptions
  ): void;
  off(
    element: Element | Document,
    type: string,
    selector?: string,
    listener?: EventListener,
    options?: boolean | EventListenerOptions
  ): void;
  fire(target: EventTarget, type: string, detail?: any): boolean;
};
